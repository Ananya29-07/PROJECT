{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Desktop\\\\Eight Sem\\\\MERN\\\\PROJECT\\\\src\\\\places\\\\pages\\\\UpdateTask.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./TaskForm.css\";\nconst DUMMY_TASKS = [{\n  taskId: 't1',\n  creator: 'Ananya Gupta',\n  taskDesc: 'Study JavaScript',\n  creatorId: 'c1'\n}, {\n  taskId: 't2',\n  creator: 'Dr. Mishra',\n  taskDesc: 'Travel whole world',\n  creatorId: 'c2'\n}];\nconst UpdateTask = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const taskId = useParams().taskId;\n  const [formState, inputHandler, setFormData] = useForm({\n    creator: {\n      value: '',\n      isValid: false\n    },\n    taskDesc: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  const identifiedTask = DUMMY_TASKS.find(t => t.taskId === taskId);\n  useEffect(() => {\n    if (identifiedTask) {\n      setFormData({\n        creator: {\n          value: identifiedTask.creator,\n          isValid: true\n        },\n        taskDesc: {\n          value: identifiedTask.taskDesc,\n          isValid: true\n        }\n      }, true);\n    }\n    setIsLoading(false);\n  }, [setFormData, identifiedTask]);\n  const taskUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n  if (!identifiedTask) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Task Not Found\")));\n  }\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Loading....\"));\n  }\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"task-form\",\n    onSubmit: taskUpdateSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"creator\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Creator\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please Enter a Valid Creator Name\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.creator.value,\n    initialValid: formState.inputs.creator.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"taskDesc\",\n    element: \"textarea\",\n    label: \"Task\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please Enter a Valid Task (At Least 5 Characters)\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.taskDesc.value,\n    initialValid: formState.inputs.taskDesc.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"UPDATE TASK\"));\n};\nexport default UpdateTask;","map":{"version":3,"names":["React","useEffect","useState","useParams","Input","Button","Card","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","DUMMY_TASKS","taskId","creator","taskDesc","creatorId","UpdateTask","isLoading","setIsLoading","formState","inputHandler","setFormData","value","isValid","identifiedTask","find","t","taskUpdateSubmitHandler","event","preventDefault","console","log","inputs","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","element","type","label","validators","errorText","onInput","initialValue","initialValid","disabled"],"sources":["C:/Users/91981/Desktop/Eight Sem/MERN/PROJECT/src/places/pages/UpdateTask.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\n\r\nimport \"./TaskForm.css\";\r\n\r\nconst DUMMY_TASKS = [\r\n    {\r\n        taskId : 't1',\r\n        creator : 'Ananya Gupta',\r\n        taskDesc : 'Study JavaScript',\r\n        creatorId: 'c1'\r\n    },\r\n    {\r\n        taskId : 't2',\r\n        creator : 'Dr. Mishra',\r\n        taskDesc : 'Travel whole world',\r\n        creatorId: 'c2'\r\n    }\r\n];\r\n\r\nconst UpdateTask = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const taskId = useParams().taskId;\r\n\r\n  const [formState, inputHandler, setFormData] = useForm({\r\n    creator: {\r\n        value: '',\r\n        isValid: false\r\n    },\r\n    taskDesc: {\r\n        value: '',\r\n        isValid: false\r\n    }\r\n  }, false);\r\n\r\n  const identifiedTask = DUMMY_TASKS.find(t => t.taskId === taskId);\r\n\r\n  useEffect(() => {\r\n    if (identifiedTask) {\r\n      setFormData({\r\n        creator: {\r\n            value: identifiedTask.creator,\r\n            isValid: true\r\n        },\r\n        taskDesc: {\r\n            value: identifiedTask.taskDesc,\r\n            isValid: true\r\n        }\r\n      }, true);\r\n    }\r\n    setIsLoading(false);\r\n  }, [setFormData, identifiedTask]);\r\n\r\n  const taskUpdateSubmitHandler = event => {\r\n    event.preventDefault();\r\n    console.log(formState.inputs);\r\n  };\r\n\r\n  if(!identifiedTask) {\r\n    return (\r\n        <div className = \"center\">\r\n          <Card>\r\n            <h2>Task Not Found</h2>\r\n          </Card>\r\n        </div>  \r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n        <div className=\"center\">\r\n            <h2>Loading....</h2>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form className=\"task-form\" onSubmit={taskUpdateSubmitHandler}>\r\n        <Input \r\n          id=\"creator\" \r\n          element=\"input\" \r\n          type=\"text\" \r\n          label=\"Creator\" \r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please Enter a Valid Creator Name\"\r\n          onInput= {inputHandler}\r\n          initialValue={formState.inputs.creator.value}\r\n          initialValid={formState.inputs.creator.isValid}\r\n        />\r\n         <Input \r\n          id=\"taskDesc\" \r\n          element=\"textarea\"  \r\n          label=\"Task\" \r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please Enter a Valid Task (At Least 5 Characters)\"\r\n          onInput= {inputHandler}\r\n          initialValue={formState.inputs.taskDesc.value}\r\n          initialValid={formState.inputs.taskDesc.isValid}\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>UPDATE TASK</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UpdateTask;"],"mappings":"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"},"metadata":{},"sourceType":"module"}