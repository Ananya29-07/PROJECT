{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Desktop\\\\Eight Sem\\\\MERN\\\\PROJECT\\\\FRONTEND\\\\src\\\\places\\\\pages\\\\NewTask.js\";\nimport React from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport \"./TaskForm.css\";\nconst NewTask = () => {\n  const [formState, inputHandler] = useForm({\n    creator: {\n      value: '',\n      isValid: false\n    },\n    taskDesc: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  const taskSubmitHandler = event => {\n    event.preventDefault();\n    try {\n      let myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      let requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: JSON.stringify({\n          creator: formState.inputs.creator.value,\n          taskDesc: formState.inputs.taskDesc.value\n        }),\n        redirect: 'follow'\n      };\n      fetch(\"http://localhost:5000/tasks/\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n    } catch (err) {}\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"task-form\",\n    onSubmit: taskSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"creator\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Creator\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please Enter a Valid Creator Name.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"taskDesc\",\n    element: \"textarea\",\n    label: \"Task\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please Enter a Valid Task (At Least 5 Characters)\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"CREATE TASK\")));\n};\nexport default NewTask;","map":{"version":3,"names":["React","Input","Button","useForm","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","NewTask","formState","inputHandler","creator","value","isValid","taskDesc","taskSubmitHandler","event","preventDefault","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","inputs","redirect","fetch","then","response","text","result","console","log","catch","error","err","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","id","element","type","label","validators","errorText","onInput","disabled"],"sources":["C:/Users/91981/Desktop/Eight Sem/MERN/PROJECT/FRONTEND/src/places/pages/NewTask.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\r\nimport \"./TaskForm.css\";\r\n\r\n  const NewTask = () => {\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            creator: {\r\n              value: '',\r\n              isValid: false\r\n            },\r\n            taskDesc: {\r\n              value: '',\r\n              isValid: false\r\n            }\r\n        }, false\r\n     );\r\n\r\n    const taskSubmitHandler = event => {\r\n        event.preventDefault();\r\n        try {\r\n          let myHeaders = new Headers();\r\n          myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n          let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify({\r\n              creator: formState.inputs.creator.value,\r\n              taskDesc: formState.inputs.taskDesc.value\r\n            }),\r\n            redirect: 'follow'\r\n          };\r\n\r\n          fetch(\"http://localhost:5000/tasks/\", requestOptions) \r\n          .then(response => response.text())\r\n          .then(result => console.log(result))\r\n          .catch(error => console.log('error', error));\r\n        } catch (err) {}    \r\n    };\r\n  \r\n    return (\r\n     <React.Fragment>\r\n      <form className=\"task-form\" onSubmit={taskSubmitHandler}>\r\n        <Input\r\n          id=\"creator\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Creator\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please Enter a Valid Creator Name.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"taskDesc\"\r\n          element=\"textarea\"\r\n          label=\"Task\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please Enter a Valid Task (At Least 5 Characters)\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          CREATE TASK\r\n        </Button>\r\n      </form>\r\n     </React.Fragment>  \r\n    );\r\n  };\r\n\r\nexport default NewTask;"],"mappings":"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"},"metadata":{},"sourceType":"module"}