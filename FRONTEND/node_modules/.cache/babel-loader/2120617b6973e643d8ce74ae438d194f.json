{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Desktop\\\\Eight Sem\\\\MERN\\\\PROJECT\\\\src\\\\shared\\\\components\\\\FormElements\\\\Input.js\";\nimport React, { useReducer, useEffect } from \"react\";\nimport { validate } from \"../../util/validators\";\nimport './Input.css';\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH':\n      return {\n        ...state,\n        isTouched: true\n      };\n    default:\n      return state;\n  }\n};\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n  const {\n    id,\n    onInput\n  } = props;\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n  const element = props.element === 'input' ? /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, props.label), element, !inputState.isValid && inputState.isTouched && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 55\n    }\n  }, props.errorText));\n};\nexport default Input;","map":{"version":3,"names":["React","useReducer","useEffect","validate","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","inputState","dispatch","initialValue","initialValid","id","onInput","changeHandler","event","target","touchHandler","element","createElement","placeholder","onChange","onBlur","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","rows","className","htmlFor","label","errorText"],"sources":["C:/Users/91981/Desktop/Eight Sem/MERN/PROJECT/src/shared/components/FormElements/Input.js"],"sourcesContent":["import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE' : \r\n          return {\r\n            ...state,\r\n            value: action.val,\r\n            isValid: validate(action.val, action.validators)\r\n          };\r\n        case 'TOUCH' :\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            };  \r\n        default :\r\n          return state;  \r\n    }\r\n}\r\n\r\nconst Input = props => {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n      value: props.initialValue || '', \r\n      isTouched: false,\r\n      isValid: props.initialValid || false\r\n    });\r\n\r\n    const { id, onInput } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput]);\r\n   \r\n    const changeHandler = event => {\r\n        dispatch({\r\n            type: 'CHANGE', \r\n            val: event.target.value, \r\n            validators: props.validators\r\n        });\r\n    };\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: 'TOUCH'\r\n        });\r\n    }\r\n\r\n    const element = props.element === 'input' ? (\r\n      <input \r\n        id={props.id} \r\n        type={props.type} \r\n        placeholder={props.placeholder} \r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea \r\n        id={props.id} \r\n        rows={props.rows || 3} \r\n        onChange={changeHandler} \r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n    return (\r\n     <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n     </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Input;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAEpD,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,OAAO,aAAa;AAEpB,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACpC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,QAAQ;MACX,OAAO;QACL,GAAGF,KAAK;QACRG,KAAK,EAAEF,MAAM,CAACG,GAAG;QACjBC,OAAO,EAAEP,QAAQ,CAACG,MAAM,CAACG,GAAG,EAAEH,MAAM,CAACK,UAAU;MACjD,CAAC;IACH,KAAK,OAAO;MACR,OAAO;QACH,GAAGN,KAAK;QACRO,SAAS,EAAE;MACf,CAAC;IACL;MACE,OAAOP,KAAK;EAClB;AACJ,CAAC;AAED,MAAMQ,KAAK,GAAGC,KAAK,IAAI;EACnB,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGf,UAAU,CAACG,YAAY,EAAE;IACtDI,KAAK,EAAEM,KAAK,CAACG,YAAY,IAAI,EAAE;IAC/BL,SAAS,EAAE,KAAK;IAChBF,OAAO,EAAEI,KAAK,CAACI,YAAY,IAAI;EACjC,CAAC,CAAC;EAEF,MAAM;IAAEC,EAAE;IAAEC;EAAQ,CAAC,GAAGN,KAAK;EAC7B,MAAM;IAAEN,KAAK;IAAEE;EAAQ,CAAC,GAAGK,UAAU;EAErCb,SAAS,CAAC,MAAM;IACZkB,OAAO,CAACD,EAAE,EAAEX,KAAK,EAAEE,OAAO,CAAC;EAC/B,CAAC,EAAE,CAACS,EAAE,EAAEX,KAAK,EAAEE,OAAO,EAAEU,OAAO,CAAC,CAAC;EAEjC,MAAMC,aAAa,GAAGC,KAAK,IAAI;IAC3BN,QAAQ,CAAC;MACLT,IAAI,EAAE,QAAQ;MACdE,GAAG,EAAEa,KAAK,CAACC,MAAM,CAACf,KAAK;MACvBG,UAAU,EAAEG,KAAK,CAACH;IACtB,CAAC,CAAC;EACN,CAAC;EAED,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACvBR,QAAQ,CAAC;MACLT,IAAI,EAAE;IACV,CAAC,CAAC;EACN,CAAC;EAED,MAAMkB,OAAO,GAAGX,KAAK,CAACW,OAAO,KAAK,OAAO,gBACvCzB,KAAA,CAAA0B,aAAA;IACEP,EAAE,EAAEL,KAAK,CAACK,EAAG;IACbZ,IAAI,EAAEO,KAAK,CAACP,IAAK;IACjBoB,WAAW,EAAEb,KAAK,CAACa,WAAY;IAC/BC,QAAQ,EAAEP,aAAc;IACxBQ,MAAM,EAAEL,YAAa;IACrBhB,KAAK,EAAEO,UAAU,CAACP,KAAM;IAAAsB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACzB,CAAC,gBAEFnC,KAAA,CAAA0B,aAAA;IACEP,EAAE,EAAEL,KAAK,CAACK,EAAG;IACbiB,IAAI,EAAEtB,KAAK,CAACsB,IAAI,IAAI,CAAE;IACtBR,QAAQ,EAAEP,aAAc;IACxBQ,MAAM,EAAEL,YAAa;IACrBhB,KAAK,EAAEO,UAAU,CAACP,KAAM;IAAAsB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACzB,CACF;EAED,oBACCnC,KAAA,CAAA0B,aAAA;IAAKW,SAAS,EAAG,gBAAe,CAACtB,UAAU,CAACL,OAAO,IAAIK,UAAU,CAACH,SAAS,IAAI,uBAAwB,EAAE;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxGnC,KAAA,CAAA0B,aAAA;IAAOY,OAAO,EAAExB,KAAK,CAACK,EAAG;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAErB,KAAK,CAACyB,KAAa,CAAC,EAC9Cd,OAAO,EACP,CAACV,UAAU,CAACL,OAAO,IAAIK,UAAU,CAACH,SAAS,iBAAIZ,KAAA,CAAA0B,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIrB,KAAK,CAAC0B,SAAa,CACnE,CAAC;AAEX,CAAC;AAGD,eAAe3B,KAAK"},"metadata":{},"sourceType":"module"}