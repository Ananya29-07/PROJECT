{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Desktop\\\\Eight Sem\\\\MERN\\\\PROJECT\\\\FRONTEND\\\\src\\\\places\\\\pages\\\\UpdateTask.js\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./TaskForm.css\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nconst UpdateTask = () => {\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const taskId = useParams().taskId;\n  const [formState, inputHandler, setFormData] = useForm({\n    creator: {\n      value: '',\n      isValid: false\n    },\n    taskDesc: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  useEffect(() => {\n    const fetchTask = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:5000/api/tasks/update/${taskId}`, 'PATCH', JSON.stringify);\n        setFormData({\n          creator: {\n            value: responseData.task.creator,\n            isValid: true\n          },\n          taskDesc: {\n            value: responseData.task.taskDesc,\n            isValid: true\n          }\n        }, true);\n      } catch (err) {}\n    };\n    fetchTask();\n  }, [sendRequest, taskId, setFormData]);\n  const taskUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"task-form\",\n    onSubmit: taskUpdateSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"creator\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Creator\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please Enter a Valid Creator Name\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.creator.value,\n    initialValid: formState.inputs.creator.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"taskDesc\",\n    element: \"textarea\",\n    label: \"Task\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please Enter a Valid Task (At Least 5 Characters)\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.taskDesc.value,\n    initialValid: formState.inputs.taskDesc.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"UPDATE TASK\")));\n};\nexport default UpdateTask;","map":{"version":3,"names":["React","useEffect","useParams","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","useHttpClient","LoadingSpinner","ErrorModal","UpdateTask","isLoading","error","sendRequest","clearError","taskId","formState","inputHandler","setFormData","creator","value","isValid","taskDesc","fetchTask","responseData","JSON","stringify","task","err","taskUpdateSubmitHandler","event","preventDefault","console","log","inputs","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","onClear","onSubmit","id","element","type","label","validators","errorText","onInput","initialValue","initialValid","disabled"],"sources":["C:/Users/91981/Desktop/Eight Sem/MERN/PROJECT/FRONTEND/src/places/pages/UpdateTask.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\n\r\nimport \"./TaskForm.css\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\n\r\nconst UpdateTask = () => {\r\n  const { isLoading, error, sendRequest, clearError} = useHttpClient();\r\n\r\n  const taskId = useParams().taskId;\r\n\r\n  const [formState, inputHandler, setFormData] = useForm({\r\n    creator: {\r\n        value: '',\r\n        isValid: false\r\n    },\r\n    taskDesc: {\r\n        value: '',\r\n        isValid: false\r\n    }\r\n  }, false);\r\n\r\n  useEffect(() => {\r\n    const fetchTask = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/tasks/update/${taskId}`,\r\n          'PATCH',\r\n          JSON.stringify\r\n        );\r\n        setFormData({\r\n          creator: {\r\n              value: responseData.task.creator,\r\n              isValid: true\r\n          },\r\n          taskDesc: {\r\n              value: responseData.task.taskDesc,\r\n              isValid: true\r\n          }\r\n        }, true);\r\n      } catch (err) {}    \r\n    };\r\n    fetchTask();\r\n  }, [sendRequest, taskId, setFormData]);\r\n\r\n  const taskUpdateSubmitHandler = event => {\r\n    event.preventDefault();\r\n    console.log(formState.inputs);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n        <div className=\"center\">\r\n            <LoadingSpinner />\r\n        </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n   <React.Fragment>\r\n    <ErrorModal error = {error} onClear = {clearError} />\r\n    <form className=\"task-form\" onSubmit={taskUpdateSubmitHandler}>\r\n        <Input \r\n          id=\"creator\" \r\n          element=\"input\" \r\n          type=\"text\" \r\n          label=\"Creator\" \r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please Enter a Valid Creator Name\"\r\n          onInput= {inputHandler}\r\n          initialValue={formState.inputs.creator.value}\r\n          initialValid={formState.inputs.creator.isValid}\r\n        />\r\n         <Input \r\n          id=\"taskDesc\" \r\n          element=\"textarea\"  \r\n          label=\"Task\" \r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please Enter a Valid Task (At Least 5 Characters)\"\r\n          onInput= {inputHandler}\r\n          initialValue={formState.inputs.taskDesc.value}\r\n          initialValid={formState.inputs.taskDesc.isValid}\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>UPDATE TASK</Button>\r\n    </form>\r\n   </React.Fragment>  \r\n  );\r\n};\r\n\r\nexport default UpdateTask;"],"mappings":"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"},"metadata":{},"sourceType":"module"}