{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Desktop\\\\Eight Sem\\\\MERN\\\\PROJECT\\\\FRONTEND\\\\src\\\\places\\\\pages\\\\UpdateTask.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./TaskForm.css\";\nimport Card from \"../../shared/components/UIElements/Card\";\nconst UpdateTask = () => {\n  const [loadedTask, setLoadedTask] = useState();\n  const taskId = useParams().taskId;\n  const history = useHistory();\n  const [formState, inputHandler, setFormData] = useForm({\n    creator: {\n      value: '',\n      isValid: false\n    },\n    taskDesc: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  // useEffect(() => {\n  //   const fetchTask = async () => {\n  //     try {\n  //       const responseData = await sendRequest(\n  //         `http://localhost:5000/api/tasks/update/${taskId}`\n  //       );\n  //       setLoadedTask(responseData.task)\n  //       setFormData({\n  //         creator: {\n  //             value: responseData.task.creator,\n  //             isValid: true\n  //         },\n  //         taskDesc: {\n  //             value: responseData.task.taskDesc,\n  //             isValid: true\n  //         }\n  //       }, true);\n  //     } catch (err) {}    \n  //   };\n  //   fetchTask();\n  // }, [sendRequest, taskId, setFormData]);\n\n  // const taskUpdateSubmitHandler = async event => {\n  //   event.preventDefault();\n  //   try{\n  //     await sendRequest(\n  //       `http://localhost:5000/api/tasks/update/${taskId}`,\n  //       'PATCH',\n  //       JSON.stringify({\n  //         creator: formState.inputs.creator.value,\n  //         taskDesc: formState.inputs.taskDesc.value\n  //       }),\n  //       {\n  //           'Content-Type' : 'application/json'\n  //       }\n  //     );\n  //     history.push('/tasks/:taskId');\n  //   } catch (err) {}\n  // };\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Loading...\"), \">\");\n  }\n  if (!loadedTask && !error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"Could not find the task!\")));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"task-form\",\n    onSubmit: taskUpdateSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"creator\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Creator\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please Enter a Valid Creator Name\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.creator.value,\n    initialValid: formState.inputs.creator.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"taskDesc\",\n    element: \"textarea\",\n    label: \"Task\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please Enter a Valid Task (At Least 5 Characters)\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.taskDesc.value,\n    initialValid: formState.inputs.taskDesc.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"UPDATE TASK\")));\n};\nexport default UpdateTask;","map":{"version":3,"names":["React","useEffect","useState","useParams","useHistory","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","Card","UpdateTask","loadedTask","setLoadedTask","taskId","history","formState","inputHandler","setFormData","creator","value","isValid","taskDesc","isLoading","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","error","Fragment","onSubmit","taskUpdateSubmitHandler","id","element","type","label","validators","errorText","onInput","initialValue","inputs","initialValid","disabled"],"sources":["C:/Users/91981/Desktop/Eight Sem/MERN/PROJECT/FRONTEND/src/places/pages/UpdateTask.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\n\r\nimport \"./TaskForm.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\n\r\nconst UpdateTask = () => {\r\n  const [loadedTask, setLoadedTask] = useState();\r\n  const taskId = useParams().taskId;\r\n  const history = useHistory();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm({\r\n    creator: {\r\n        value: '',\r\n        isValid: false\r\n    },\r\n    taskDesc: {\r\n        value: '',\r\n        isValid: false\r\n    }\r\n  }, false);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchTask = async () => {\r\n  //     try {\r\n  //       const responseData = await sendRequest(\r\n  //         `http://localhost:5000/api/tasks/update/${taskId}`\r\n  //       );\r\n  //       setLoadedTask(responseData.task)\r\n  //       setFormData({\r\n  //         creator: {\r\n  //             value: responseData.task.creator,\r\n  //             isValid: true\r\n  //         },\r\n  //         taskDesc: {\r\n  //             value: responseData.task.taskDesc,\r\n  //             isValid: true\r\n  //         }\r\n  //       }, true);\r\n  //     } catch (err) {}    \r\n  //   };\r\n  //   fetchTask();\r\n  // }, [sendRequest, taskId, setFormData]);\r\n\r\n  // const taskUpdateSubmitHandler = async event => {\r\n  //   event.preventDefault();\r\n  //   try{\r\n  //     await sendRequest(\r\n  //       `http://localhost:5000/api/tasks/update/${taskId}`,\r\n  //       'PATCH',\r\n  //       JSON.stringify({\r\n  //         creator: formState.inputs.creator.value,\r\n  //         taskDesc: formState.inputs.taskDesc.value\r\n  //       }),\r\n  //       {\r\n  //           'Content-Type' : 'application/json'\r\n  //       }\r\n  //     );\r\n  //     history.push('/tasks/:taskId');\r\n  //   } catch (err) {}\r\n  // };\r\n\r\n  if (isLoading) {\r\n    return (\r\n        <div className=\"center\">\r\n          <h2>Loading...</h2>>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedTask && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find the task!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n   <React.Fragment>\r\n      <form className=\"task-form\" onSubmit={taskUpdateSubmitHandler}>\r\n        <Input \r\n          id=\"creator\" \r\n          element=\"input\" \r\n          type=\"text\" \r\n          label=\"Creator\" \r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please Enter a Valid Creator Name\"\r\n          onInput= {inputHandler}\r\n          initialValue={formState.inputs.creator.value}\r\n          initialValid={formState.inputs.creator.isValid}\r\n        />\r\n         <Input \r\n          id=\"taskDesc\" \r\n          element=\"textarea\"  \r\n          label=\"Task\" \r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please Enter a Valid Task (At Least 5 Characters)\"\r\n          onInput= {inputHandler}\r\n          initialValue={formState.inputs.taskDesc.value}\r\n          initialValid={formState.inputs.taskDesc.isValid}\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>UPDATE TASK</Button>\r\n    </form>\r\n   </React.Fragment>  \r\n  );\r\n};\r\n\r\nexport default UpdateTask;"],"mappings":"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"},"metadata":{},"sourceType":"module"}